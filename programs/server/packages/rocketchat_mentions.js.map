{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:mentions/server/server.js","meteor://ðŸ’»app/packages/rocketchat:mentions/server/methods/getUserMentionsByChannel.js","meteor://ðŸ’»app/packages/rocketchat:mentions/server/Mentions.js","meteor://ðŸ’»app/packages/rocketchat:mentions/Mentions.js"],"names":["_","module","watch","require","default","v","MentionsServer","mention","pattern","RocketChat","settings","get","messageMaxAll","getUsers","usernames","Meteor","users","find","username","$in","unique","fields","_id","fetch","getChannel","rid","models","Rooms","findOneById","getChannels","channels","name","t","callbacks","add","message","execute","priority","HIGH","methods","getUserMentionsByChannel","roomId","options","check","String","userId","Error","method","room","user","Users","Messages","findVisibleByMentionAndRoomId","export","Mentions","constructor","args","m","_getUsers","_getChannels","_getChannel","_messageMaxAll","getUsersByMentions","msg","mentions","getUserMentions","mentionsAll","userMentions","forEach","trim","substr","push","allChannel","length","getChannelbyMentions","getChannelMentions","map","c","exportDefault","useRealName","me","_me","p","_pattern","s","_useRealName","userMentionRegex","RegExp","channelMentionRegex","replaceUsers","str","replace","match","includes","mentionObj","findWhere","temp","replaceChannels","n1","n2","test","parse","html"],"mappings":"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","file":"/packages/rocketchat_mentions.js","sourcesContent":["import _ from 'underscore';\nimport MentionsServer from './Mentions';\n\nconst mention = new MentionsServer({\n\tpattern: () => RocketChat.settings.get('UTF8_Names_Validation'),\n\tmessageMaxAll: () => RocketChat.settings.get('Message_MaxAll'),\n\tgetUsers: (usernames) => Meteor.users.find({ username: {$in: _.unique(usernames)}}, { fields: {_id: true, username: true }}).fetch(),\n\tgetChannel: (rid) => RocketChat.models.Rooms.findOneById(rid),\n\tgetChannels: (channels) => RocketChat.models.Rooms.find({ name: {$in: _.unique(channels)}, t: 'c'\t}, { fields: {_id: 1, name: 1 }}).fetch()\n});\nRocketChat.callbacks.add('beforeSaveMessage', (message) => mention.execute(message), RocketChat.callbacks.priority.HIGH, 'mentions');\n","Meteor.methods({\n\tgetUserMentionsByChannel({ roomId, options }) {\n\t\tcheck(roomId, String);\n\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'getUserMentionsByChannel' });\n\t\t}\n\n\t\tconst room = RocketChat.models.Rooms.findOneById(roomId);\n\n\t\tif (!room) {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', { method: 'getUserMentionsByChannel' });\n\t\t}\n\n\t\tconst user = RocketChat.models.Users.findOneById(Meteor.userId());\n\n\t\treturn RocketChat.models.Messages.findVisibleByMentionAndRoomId(user.username, roomId, options).fetch();\n\t}\n});\n","/*\n* Mentions is a named function that will process Mentions\n* @param {Object} message - The message object\n*/\nimport Mentions from '../Mentions';\nexport default class MentionsServer extends Mentions {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tthis.messageMaxAll = args.messageMaxAll;\n\t\tthis.getChannel = args.getChannel;\n\t\tthis.getChannels = args.getChannels;\n\t\tthis.getUsers = args.getUsers;\n\t}\n\tset getUsers(m) {\n\t\tthis._getUsers = m;\n\t}\n\tget getUsers() {\n\t\treturn typeof this._getUsers === 'function' ? this._getUsers : () => this._getUsers;\n\t}\n\tset getChannels(m) {\n\t\tthis._getChannels = m;\n\t}\n\tget getChannels() {\n\t\treturn typeof this._getChannels === 'function' ? this._getChannels : () => this._getChannels;\n\t}\n\tset getChannel(m) {\n\t\tthis._getChannel = m;\n\t}\n\tget getChannel() {\n\t\treturn typeof this._getChannel === 'function' ? this._getChannel : () => this._getChannel;\n\t}\n\tset messageMaxAll(m) {\n\t\tthis._messageMaxAll = m;\n\t}\n\tget messageMaxAll() {\n\t\treturn typeof this._messageMaxAll === 'function' ? this._messageMaxAll() : this._messageMaxAll;\n\t}\n\tgetUsersByMentions({msg, rid}) {\n\t\tlet mentions = this.getUserMentions(msg);\n\t\tconst mentionsAll = [];\n\t\tconst userMentions = [];\n\n\t\tmentions.forEach((m) => {\n\t\t\tconst mention = m.trim().substr(1);\n\t\t\tif (mention !== 'all' && mention !== 'here') {\n\t\t\t\treturn userMentions.push(mention);\n\t\t\t}\n\t\t\tif (mention === 'all') {\n\t\t\t\tconst messageMaxAll = this.messageMaxAll;\n\t\t\t\tconst allChannel = this.getChannel(rid);\n\t\t\t\tif (messageMaxAll !== 0 && allChannel.usernames.length >= messageMaxAll) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmentionsAll.push({\n\t\t\t\t_id: mention,\n\t\t\t\tusername: mention\n\t\t\t});\n\t\t});\n\t\tmentions = userMentions.length ? this.getUsers(userMentions) : [];\n\t\treturn [...mentionsAll, ...mentions];\n\t}\n\tgetChannelbyMentions({msg}) {\n\t\tconst channels = this.getChannelMentions(msg);\n\t\treturn this.getChannels(channels.map(c => c.trim().substr(1)));\n\t}\n\texecute(message) {\n\t\tconst mentionsAll = this.getUsersByMentions(message);\n\t\tconst channels = this.getChannelbyMentions(message);\n\n\t\tmessage.mentions = mentionsAll;\n\n\t\tmessage.channels = channels;\n\t\treturn message;\n\t}\n}\n","/*\n* Mentions is a named function that will process Mentions\n* @param {Object} message - The message object\n*/\nimport _ from 'underscore';\nexport default class {\n\tconstructor({pattern, useRealName, me}) {\n\t\tthis.pattern = pattern;\n\t\tthis.useRealName = useRealName;\n\t\tthis.me = me;\n\t}\n\tset me(m) {\n\t\tthis._me = m;\n\t}\n\tget me() {\n\t\treturn typeof this._me === 'function' ? this._me() : this._me;\n\t}\n\tset pattern(p) {\n\t\tthis._pattern = p;\n\t}\n\tget pattern() {\n\t\treturn typeof this._pattern === 'function' ? this._pattern() : this._pattern;\n\t}\n\tset useRealName(s) {\n\t\tthis._useRealName = s;\n\t}\n\tget useRealName() {\n\t\treturn typeof this._useRealName === 'function' ? this._useRealName() : this._useRealName;\n\t}\n\tget userMentionRegex() {\n\t\treturn new RegExp(`@(${ this.pattern })`, 'gm');\n\t}\n\tget channelMentionRegex() {\n\t\treturn new RegExp(`^#(${ this.pattern })| #(${ this.pattern })`, 'gm');\n\t}\n\treplaceUsers(str, message, me) {\n\t\treturn str.replace(this.userMentionRegex, (match, username) => {\n\t\t\tif (['all', 'here'].includes(username)) {\n\t\t\t\treturn `<a class=\"mention-link mention-link-me mention-link-all background-attention-color\">${ match }</a>`;\n\t\t\t}\n\n\t\t\tconst mentionObj = _.findWhere(message.mentions, {username});\n\t\t\tif (message.temp == null && mentionObj == null) {\n\t\t\t\treturn match;\n\t\t\t}\n\t\t\tconst name = this.useRealName && mentionObj && mentionObj.name;\n\n\t\t\treturn `<a class=\"mention-link ${ username === me ? 'mention-link-me background-primary-action-color':'' }\" data-username=\"${ username }\" title=\"${ name ? username : '' }\">${ name || match }</a>`;\n\t\t});\n\t}\n\treplaceChannels(str, message) {\n\t\t//since apostrophe escaped contains # we need to unescape it\n\t\treturn str.replace(/&#39;/g, '\\'').replace(this.channelMentionRegex, (match, n1, n2) => {\n\t\t\tconst name = n1 || n2;\n\t\t\tif (message.temp == null && _.findWhere(message.channels, {name}) == null) {\n\t\t\t\treturn match;\n\t\t\t}\n\n\t\t\t// remove the link from inside the link and put before\n\t\t\tif (/^\\s/.test(match)) {\n\t\t\t\treturn ` <a class=\"mention-link\" data-channel=\"${ name }\">${ match.trim() }</a>`;\n\t\t\t}\n\n\t\t\treturn `<a class=\"mention-link\" data-channel=\"${ name }\">${ match }</a>`;\n\t\t});\n\t}\n\tgetUserMentions(str) {\n\t\treturn str.match(this.userMentionRegex) || [];\n\t}\n\tgetChannelMentions(str) {\n\t\treturn (str.match(this.channelMentionRegex) || []).map(match => match.trim());\n\t}\n\tparse(message) {\n\t\tlet msg = (message && message.html) || '';\n\t\tif (!msg.trim()) {\n\t\t\treturn message;\n\t\t}\n\t\tmsg = this.replaceUsers(msg, message, this.me);\n\t\tmsg = this.replaceChannels(msg, message, this.me);\n\t\tmessage.html = msg;\n\t\treturn message;\n\t}\n}\n"]}