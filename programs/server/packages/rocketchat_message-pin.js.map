{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:message-pin/server/settings.js","meteor://ðŸ’»app/packages/rocketchat:message-pin/server/pinMessage.js","meteor://ðŸ’»app/packages/rocketchat:message-pin/server/publications/pinnedMessages.js","meteor://ðŸ’»app/packages/rocketchat:message-pin/server/startup/indexes.js"],"names":["Meteor","startup","RocketChat","settings","add","type","group","models","Permissions","upsert","$setOnInsert","roles","methods","pinMessage","message","pinnedAt","userId","Error","method","get","action","room","Rooms","findOneById","rid","Array","isArray","usernames","indexOf","user","username","originalMessage","Messages","_id","cloneAndSaveAsHistoryById","me","Users","pinned","Date","now","pinnedBy","callbacks","run","setPinnedByIdAndUserId","createWithTypeRoomIdMessageAndUser","attachments","msg","u","getAvatarUrlFromUsername","ts","unpinMessage","publish","limit","ready","publication","cursorHandle","findPinnedByRoom","sort","observeChanges","added","record","changed","removed","onStop","stop","defer","tryEnsureIndex","sparse"],"mappings":"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","file":"/packages/rocketchat_message-pin.js","sourcesContent":["Meteor.startup(function() {\n\tRocketChat.settings.add('Message_AllowPinning', true, {\n\t\ttype: 'boolean',\n\t\tgroup: 'Message',\n\t\t'public': true\n\t});\n\treturn RocketChat.models.Permissions.upsert('pin-message', {\n\t\t$setOnInsert: {\n\t\t\troles: ['owner', 'moderator', 'admin']\n\t\t}\n\t});\n});\n","Meteor.methods({\n\tpinMessage(message, pinnedAt) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'pinMessage'\n\t\t\t});\n\t\t}\n\n\t\tif (!RocketChat.settings.get('Message_AllowPinning')) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Message pinning not allowed', {\n\t\t\t\tmethod: 'pinMessage',\n\t\t\t\taction: 'Message_pinning'\n\t\t\t});\n\t\t}\n\n\t\tconst room = RocketChat.models.Rooms.findOneById(message.rid);\n\t\tif (Array.isArray(room.usernames) && room.usernames.indexOf(Meteor.user().username) === -1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet originalMessage = RocketChat.models.Messages.findOneById(message._id);\n\t\tif (originalMessage == null || originalMessage._id == null) {\n\t\t\tthrow new Meteor.Error('error-invalid-message', 'Message you are pinning was not found', {\n\t\t\t\tmethod: 'pinMessage',\n\t\t\t\taction: 'Message_pinning'\n\t\t\t});\n\t\t}\n\n\t\t//If we keep history of edits, insert a new message to store history information\n\t\tif (RocketChat.settings.get('Message_KeepHistory')) {\n\t\t\tRocketChat.models.Messages.cloneAndSaveAsHistoryById(message._id);\n\t\t}\n\n\t\tconst me = RocketChat.models.Users.findOneById(Meteor.userId());\n\t\toriginalMessage.pinned = true;\n\t\toriginalMessage.pinnedAt = pinnedAt || Date.now;\n\t\toriginalMessage.pinnedBy = {\n\t\t\t_id: Meteor.userId(),\n\t\t\tusername: me.username\n\t\t};\n\n\t\toriginalMessage = RocketChat.callbacks.run('beforeSaveMessage', originalMessage);\n\t\tRocketChat.models.Messages.setPinnedByIdAndUserId(originalMessage._id, originalMessage.pinnedBy, originalMessage.pinned);\n\n\t\treturn RocketChat.models.Messages.createWithTypeRoomIdMessageAndUser('message_pinned', originalMessage.rid, '', me, {\n\t\t\tattachments: [\n\t\t\t\t{\n\t\t\t\t\t'text': originalMessage.msg,\n\t\t\t\t\t'author_name': originalMessage.u.username,\n\t\t\t\t\t'author_icon': getAvatarUrlFromUsername(originalMessage.u.username),\n\t\t\t\t\t'ts': originalMessage.ts\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t},\n\tunpinMessage(message) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'unpinMessage'\n\t\t\t});\n\t\t}\n\n\t\tif (!RocketChat.settings.get('Message_AllowPinning')) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Message pinning not allowed', {\n\t\t\t\tmethod: 'unpinMessage',\n\t\t\t\taction: 'Message_pinning'\n\t\t\t});\n\t\t}\n\n\t\tconst room = RocketChat.models.Rooms.findOneById(message.rid);\n\n\t\tif (Array.isArray(room.usernames) && room.usernames.indexOf(Meteor.user().username) === -1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet originalMessage = RocketChat.models.Messages.findOneById(message._id);\n\n\t\tif (originalMessage == null || originalMessage._id == null) {\n\t\t\tthrow new Meteor.Error('error-invalid-message', 'Message you are unpinning was not found', {\n\t\t\t\tmethod: 'unpinMessage',\n\t\t\t\taction: 'Message_pinning'\n\t\t\t});\n\t\t}\n\n\t\t//If we keep history of edits, insert a new message to store history information\n\t\tif (RocketChat.settings.get('Message_KeepHistory')) {\n\t\t\tRocketChat.models.Messages.cloneAndSaveAsHistoryById(originalMessage._id);\n\t\t}\n\n\t\tconst me = RocketChat.models.Users.findOneById(Meteor.userId());\n\t\toriginalMessage.pinned = false;\n\t\toriginalMessage.pinnedBy = {\n\t\t\t_id: Meteor.userId(),\n\t\t\tusername: me.username\n\t\t};\n\t\toriginalMessage = RocketChat.callbacks.run('beforeSaveMessage', originalMessage);\n\n\t\treturn RocketChat.models.Messages.setPinnedByIdAndUserId(originalMessage._id, originalMessage.pinnedBy, originalMessage.pinned);\n\t}\n});\n","Meteor.publish('pinnedMessages', function(rid, limit = 50) {\n\tif (!this.userId) {\n\t\treturn this.ready();\n\t}\n\tconst publication = this;\n\n\tconst user = RocketChat.models.Users.findOneById(this.userId);\n\tif (!user) {\n\t\treturn this.ready();\n\t}\n\tconst cursorHandle = RocketChat.models.Messages.findPinnedByRoom(rid, { sort: { ts: -1 }, limit }).observeChanges({\n\t\tadded(_id, record) {\n\t\t\treturn publication.added('rocketchat_pinned_message', _id, record);\n\t\t},\n\t\tchanged(_id, record) {\n\t\t\treturn publication.changed('rocketchat_pinned_message', _id, record);\n\t\t},\n\t\tremoved(_id) {\n\t\t\treturn publication.removed('rocketchat_pinned_message', _id);\n\t\t}\n\t});\n\tthis.ready();\n\treturn this.onStop(function() {\n\t\treturn cursorHandle.stop();\n\t});\n});\n","Meteor.startup(function() {\n\treturn Meteor.defer(function() {\n\t\treturn RocketChat.models.Messages.tryEnsureIndex({\n\t\t\t'pinnedBy._id': 1\n\t\t}, {\n\t\t\tsparse: 1\n\t\t});\n\t});\n});\n"]}