{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:push-notifications/server/methods/saveNotificationSettings.js","meteor://ðŸ’»app/packages/rocketchat:push-notifications/server/models/Subscriptions.js"],"names":["Meteor","methods","saveNotificationSettings","roomId","field","value","userId","Error","method","check","String","notifications","updateMethod","subscription","RocketChat","models","Subscriptions","updateAudioNotificationsById","_id","updateDesktopNotificationsById","updateMobilePushNotificationsById","updateEmailNotificationsById","updateUnreadAlertById","updateDisableNotificationsById","updateHideUnreadStatusById","updateMuteGroupMentions","updateDesktopNotificationDurationById","updateAudioNotificationValueById","isInvalidNotification","Object","keys","includes","basicValuesForNotifications","fieldsMustHaveBasicValues","findOneByRoomIdAndUserId","saveAudioNotificationValue","rid","saveDesktopNotificationDuration","audioNotifications","query","update","$unset","$set","audioNotificationValue","desktopNotifications","desktopNotificationDuration","parseInt","mobilePushNotifications","emailNotifications","unreadAlert","disableNotifications","hideUnreadStatus","muteGroupMentions","findAlwaysNotifyAudioUsersByRoomId","find","findAlwaysNotifyDesktopUsersByRoomId","findDontNotifyDesktopUsersByRoomId","findAlwaysNotifyMobileUsersByRoomId","findDontNotifyMobileUsersByRoomId","findNotificationPreferencesByRoom","explicit","$exists","$or","fields","findWithSendEmailByRoomId","u"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,OAAP,CAAe;AACdC,2BAAyBC,MAAzB,EAAiCC,KAAjC,EAAwCC,KAAxC,EAA+C;AAC9C,QAAI,CAACL,OAAOM,MAAP,EAAL,EAAsB;AACrB,YAAM,IAAIN,OAAOO,KAAX,CAAiB,oBAAjB,EAAuC,cAAvC,EAAuD;AAAEC,gBAAQ;AAAV,OAAvD,CAAN;AACA;;AACDC,UAAMN,MAAN,EAAcO,MAAd;AACAD,UAAML,KAAN,EAAaM,MAAb;AACAD,UAAMJ,KAAN,EAAaK,MAAb;AAEA,UAAMC,gBAAgB;AACrB,4BAAsB;AACrBC,sBAAc,CAACC,YAAD,EAAeR,KAAf,KAAyBS,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCC,4BAAhC,CAA6DJ,aAAaK,GAA1E,EAA+Eb,KAA/E;AADlB,OADD;AAIrB,8BAAwB;AACvBO,sBAAc,CAACC,YAAD,EAAeR,KAAf,KAAyBS,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCG,8BAAhC,CAA+DN,aAAaK,GAA5E,EAAiFb,KAAjF;AADhB,OAJH;AAOrB,iCAA2B;AAC1BO,sBAAc,CAACC,YAAD,EAAeR,KAAf,KAAyBS,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCI,iCAAhC,CAAkEP,aAAaK,GAA/E,EAAoFb,KAApF;AADb,OAPN;AAUrB,4BAAsB;AACrBO,sBAAc,CAACC,YAAD,EAAeR,KAAf,KAAyBS,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCK,4BAAhC,CAA6DR,aAAaK,GAA1E,EAA+Eb,KAA/E;AADlB,OAVD;AAarB,qBAAe;AACdO,sBAAc,CAACC,YAAD,EAAeR,KAAf,KAAyBS,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCM,qBAAhC,CAAsDT,aAAaK,GAAnE,EAAwEb,KAAxE;AADzB,OAbM;AAgBrB,8BAAwB;AACvBO,sBAAc,CAACC,YAAD,EAAeR,KAAf,KAAyBS,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCO,8BAAhC,CAA+DV,aAAaK,GAA5E,EAAiFb,UAAU,GAA3F;AADhB,OAhBH;AAmBrB,0BAAoB;AACnBO,sBAAc,CAACC,YAAD,EAAeR,KAAf,KAAyBS,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCQ,0BAAhC,CAA2DX,aAAaK,GAAxE,EAA6Eb,UAAU,GAAvF;AADpB,OAnBC;AAsBrB,2BAAqB;AACpBO,sBAAc,CAACC,YAAD,EAAeR,KAAf,KAAyBS,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCS,uBAAhC,CAAwDZ,aAAaK,GAArE,EAA0Eb,UAAU,GAApF;AADnB,OAtBA;AAyBrB,qCAA+B;AAC9BO,sBAAc,CAACC,YAAD,EAAeR,KAAf,KAAyBS,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCU,qCAAhC,CAAsEb,aAAaK,GAAnF,EAAwFb,KAAxF;AADT,OAzBV;AA4BrB,gCAA0B;AACzBO,sBAAc,CAACC,YAAD,EAAeR,KAAf,KAAyBS,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCW,gCAAhC,CAAiEd,aAAaK,GAA9E,EAAmFb,KAAnF;AADd;AA5BL,KAAtB;AAgCA,UAAMuB,wBAAwB,CAACC,OAAOC,IAAP,CAAYnB,aAAZ,EAA2BoB,QAA3B,CAAoC3B,KAApC,CAA/B;AACA,UAAM4B,8BAA8B,CAAC,KAAD,EAAQ,UAAR,EAAoB,SAApB,EAA+B,SAA/B,CAApC;AACA,UAAMC,4BAA4B,CAAC,oBAAD,EAAuB,oBAAvB,EAA6C,yBAA7C,EAAwE,sBAAxE,CAAlC;;AAEA,QAAIL,qBAAJ,EAA2B;AAC1B,YAAM,IAAI5B,OAAOO,KAAX,CAAiB,wBAAjB,EAA2C,wBAA3C,EAAqE;AAAEC,gBAAQ;AAAV,OAArE,CAAN;AACA;;AAED,QAAIyB,0BAA0BF,QAA1B,CAAmC3B,KAAnC,KAA6C,CAAC4B,4BAA4BD,QAA5B,CAAqC1B,KAArC,CAAlD,EAA+F;AAC9F,YAAM,IAAIL,OAAOO,KAAX,CAAiB,wBAAjB,EAA2C,wBAA3C,EAAqE;AAAEC,gBAAQ;AAAV,OAArE,CAAN;AACA;;AAED,UAAMK,eAAeC,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCkB,wBAAhC,CAAyD/B,MAAzD,EAAiEH,OAAOM,MAAP,EAAjE,CAArB;;AACA,QAAI,CAACO,YAAL,EAAmB;AAClB,YAAM,IAAIb,OAAOO,KAAX,CAAiB,4BAAjB,EAA+C,sBAA/C,EAAuE;AAAEC,gBAAQ;AAAV,OAAvE,CAAN;AACA;;AAEDG,kBAAcP,KAAd,EAAqBQ,YAArB,CAAkCC,YAAlC,EAAgDR,KAAhD;AAEA,WAAO,IAAP;AACA,GA7Da;;AA+Dd8B,6BAA2BC,GAA3B,EAAgC/B,KAAhC,EAAuC;AACtC,UAAMQ,eAAeC,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCkB,wBAAhC,CAAyDE,GAAzD,EAA8DpC,OAAOM,MAAP,EAA9D,CAArB;;AACA,QAAI,CAACO,YAAL,EAAmB;AAClB,YAAM,IAAIb,OAAOO,KAAX,CAAiB,4BAAjB,EAA+C,sBAA/C,EAAuE;AAAEC,gBAAQ;AAAV,OAAvE,CAAN;AACA;;AACDM,eAAWC,MAAX,CAAkBC,aAAlB,CAAgCW,gCAAhC,CAAiEd,aAAaK,GAA9E,EAAmFb,KAAnF;AACA,WAAO,IAAP;AACA,GAtEa;;AAwEdgC,kCAAgCD,GAAhC,EAAqC/B,KAArC,EAA4C;AAC3C,UAAMQ,eAAeC,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCkB,wBAAhC,CAAyDE,GAAzD,EAA8DpC,OAAOM,MAAP,EAA9D,CAArB;;AACA,QAAI,CAACO,YAAL,EAAmB;AAClB,YAAM,IAAIb,OAAOO,KAAX,CAAiB,4BAAjB,EAA+C,sBAA/C,EAAuE;AAAEC,gBAAQ;AAAV,OAAvE,CAAN;AACA;;AACDM,eAAWC,MAAX,CAAkBC,aAAlB,CAAgCU,qCAAhC,CAAsEb,aAAaK,GAAnF,EAAwFb,KAAxF;AACA,WAAO,IAAP;AACA;;AA/Ea,CAAf,E;;;;;;;;;;;ACAAS,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCC,4BAAhC,GAA+D,UAASC,GAAT,EAAcoB,kBAAd,EAAkC;AAChG,QAAMC,QAAQ;AACbrB;AADa,GAAd;AAIA,QAAMsB,SAAS,EAAf;;AAEA,MAAIF,uBAAuB,SAA3B,EAAsC;AACrCE,WAAOC,MAAP,GAAgB;AAAEH,0BAAoB;AAAtB,KAAhB;AACA,GAFD,MAEO;AACNE,WAAOE,IAAP,GAAc;AAAEJ;AAAF,KAAd;AACA;;AAED,SAAO,KAAKE,MAAL,CAAYD,KAAZ,EAAmBC,MAAnB,CAAP;AACA,CAdD;;AAgBA1B,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCW,gCAAhC,GAAmE,UAAST,GAAT,EAAcyB,sBAAd,EAAsC;AACxG,QAAMJ,QAAQ;AACbrB;AADa,GAAd;AAIA,QAAMsB,SAAS;AACdE,UAAM;AACLC;AADK;AADQ,GAAf;AAMA,SAAO,KAAKH,MAAL,CAAYD,KAAZ,EAAmBC,MAAnB,CAAP;AACA,CAZD;;AAcA1B,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCG,8BAAhC,GAAiE,UAASD,GAAT,EAAc0B,oBAAd,EAAoC;AACpG,QAAML,QAAQ;AACbrB;AADa,GAAd;AAIA,QAAMsB,SAAS,EAAf;;AAEA,MAAII,yBAAyB,SAA7B,EAAwC;AACvCJ,WAAOC,MAAP,GAAgB;AAAEG,4BAAsB;AAAxB,KAAhB;AACA,GAFD,MAEO;AACNJ,WAAOE,IAAP,GAAc;AAAEE;AAAF,KAAd;AACA;;AAED,SAAO,KAAKJ,MAAL,CAAYD,KAAZ,EAAmBC,MAAnB,CAAP;AACA,CAdD;;AAgBA1B,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCU,qCAAhC,GAAwE,UAASR,GAAT,EAAcb,KAAd,EAAqB;AAC5F,QAAMkC,QAAQ;AACbrB;AADa,GAAd;AAIA,QAAMsB,SAAS;AACdE,UAAM;AACLG,mCAA6BC,SAASzC,KAAT;AADxB;AADQ,GAAf;AAMA,SAAO,KAAKmC,MAAL,CAAYD,KAAZ,EAAmBC,MAAnB,CAAP;AACA,CAZD;;AAcA1B,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCI,iCAAhC,GAAoE,UAASF,GAAT,EAAc6B,uBAAd,EAAuC;AAC1G,QAAMR,QAAQ;AACbrB;AADa,GAAd;AAIA,QAAMsB,SAAS,EAAf;;AAEA,MAAIO,4BAA4B,SAAhC,EAA2C;AAC1CP,WAAOC,MAAP,GAAgB;AAAEM,+BAAyB;AAA3B,KAAhB;AACA,GAFD,MAEO;AACNP,WAAOE,IAAP,GAAc;AAAEK;AAAF,KAAd;AACA;;AAED,SAAO,KAAKP,MAAL,CAAYD,KAAZ,EAAmBC,MAAnB,CAAP;AACA,CAdD;;AAgBA1B,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCK,4BAAhC,GAA+D,UAASH,GAAT,EAAc8B,kBAAd,EAAkC;AAChG,QAAMT,QAAQ;AACbrB;AADa,GAAd;AAIA,QAAMsB,SAAS;AACdE,UAAM;AACLM;AADK;AADQ,GAAf;AAMA,SAAO,KAAKR,MAAL,CAAYD,KAAZ,EAAmBC,MAAnB,CAAP;AACA,CAZD;;AAcA1B,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCM,qBAAhC,GAAwD,UAASJ,GAAT,EAAc+B,WAAd,EAA2B;AAClF,QAAMV,QAAQ;AACbrB;AADa,GAAd;AAIA,QAAMsB,SAAS;AACdE,UAAM;AACLO;AADK;AADQ,GAAf;AAMA,SAAO,KAAKT,MAAL,CAAYD,KAAZ,EAAmBC,MAAnB,CAAP;AACA,CAZD;;AAcA1B,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCO,8BAAhC,GAAiE,UAASL,GAAT,EAAcgC,oBAAd,EAAoC;AACpG,QAAMX,QAAQ;AACbrB;AADa,GAAd;AAIA,QAAMsB,SAAS;AACdE,UAAM;AACLQ;AADK;AADQ,GAAf;AAMA,SAAO,KAAKV,MAAL,CAAYD,KAAZ,EAAmBC,MAAnB,CAAP;AACA,CAZD;;AAcA1B,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCQ,0BAAhC,GAA6D,UAASN,GAAT,EAAciC,gBAAd,EAAgC;AAC5F,QAAMZ,QAAQ;AACbrB;AADa,GAAd;AAIA,QAAMsB,SAAS;AACdE,UAAM;AACLS;AADK;AADQ,GAAf;AAMA,SAAO,KAAKX,MAAL,CAAYD,KAAZ,EAAmBC,MAAnB,CAAP;AACA,CAZD;;AAcA1B,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCS,uBAAhC,GAA0D,UAASP,GAAT,EAAckC,iBAAd,EAAiC;AAC1F,QAAMb,QAAQ;AACbrB;AADa,GAAd;AAIA,QAAMsB,SAAS;AACdE,UAAM;AACLU;AADK;AADQ,GAAf;AAMA,SAAO,KAAKZ,MAAL,CAAYD,KAAZ,EAAmBC,MAAnB,CAAP;AACA,CAZD;;AAcA1B,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCqC,kCAAhC,GAAqE,UAASlD,MAAT,EAAiB;AACrF,QAAMoC,QAAQ;AACbH,SAAKjC,MADQ;AAEbmC,wBAAoB;AAFP,GAAd;AAKA,SAAO,KAAKgB,IAAL,CAAUf,KAAV,CAAP;AACA,CAPD;;AASAzB,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCuC,oCAAhC,GAAuE,UAASpD,MAAT,EAAiB;AACvF,QAAMoC,QAAQ;AACbH,SAAKjC,MADQ;AAEbyC,0BAAsB;AAFT,GAAd;AAKA,SAAO,KAAKU,IAAL,CAAUf,KAAV,CAAP;AACA,CAPD;;AASAzB,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCwC,kCAAhC,GAAqE,UAASrD,MAAT,EAAiB;AACrF,QAAMoC,QAAQ;AACbH,SAAKjC,MADQ;AAEbyC,0BAAsB;AAFT,GAAd;AAKA,SAAO,KAAKU,IAAL,CAAUf,KAAV,CAAP;AACA,CAPD;;AASAzB,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCyC,mCAAhC,GAAsE,UAAStD,MAAT,EAAiB;AACtF,QAAMoC,QAAQ;AACbH,SAAKjC,MADQ;AAEb4C,6BAAyB;AAFZ,GAAd;AAKA,SAAO,KAAKO,IAAL,CAAUf,KAAV,CAAP;AACA,CAPD;;AASAzB,WAAWC,MAAX,CAAkBC,aAAlB,CAAgC0C,iCAAhC,GAAoE,UAASvD,MAAT,EAAiB;AACpF,QAAMoC,QAAQ;AACbH,SAAKjC,MADQ;AAEb4C,6BAAyB;AAFZ,GAAd;AAKA,SAAO,KAAKO,IAAL,CAAUf,KAAV,CAAP;AACA,CAPD;;AASAzB,WAAWC,MAAX,CAAkBC,aAAlB,CAAgC2C,iCAAhC,GAAoE,UAASxD,MAAT,EAAiByD,QAAjB,EAA2B;AAC9F,QAAMrB,QAAQ;AACbH,SAAKjC,MADQ;AAEb,aAAS;AAAC0D,eAAS;AAAV;AAFI,GAAd;;AAKA,MAAID,QAAJ,EAAc;AACbrB,UAAMuB,GAAN,GAAY,CACX;AAACxB,0BAAoB;AAACuB,iBAAS;AAAV;AAArB,KADW,EAEX;AAAClB,8BAAwB;AAACkB,iBAAS;AAAV;AAAzB,KAFW,EAGX;AAACjB,4BAAsB;AAACiB,iBAAS;AAAV;AAAvB,KAHW,EAIX;AAAChB,mCAA6B;AAACgB,iBAAS;AAAV;AAA9B,KAJW,EAKX;AAACd,+BAAyB;AAACc,iBAAS;AAAV;AAA1B,KALW,EAMX;AAACX,4BAAsB;AAACW,iBAAS;AAAV;AAAvB,KANW,EAOX;AAACT,yBAAmB;AAACS,iBAAS;AAAV;AAApB,KAPW,CAAZ;AASA;;AAED,SAAO,KAAKP,IAAL,CAAUf,KAAV,EAAiB;AAAEwB,YAAQ;AAAE,eAAS,CAAX;AAAczB,0BAAoB,CAAlC;AAAqCK,8BAAwB,CAA7D;AAAgEE,mCAA6B,CAA7F;AAAgGD,4BAAsB,CAAtH;AAAyHG,+BAAyB,CAAlJ;AAAqJG,4BAAsB,CAA3K;AAA8KE,yBAAmB;AAAjM;AAAV,GAAjB,CAAP;AACA,CAnBD;;AAqBAtC,WAAWC,MAAX,CAAkBC,aAAlB,CAAgCgD,yBAAhC,GAA4D,UAAS7D,MAAT,EAAiB;AAC5E,QAAMoC,QAAQ;AACbH,SAAKjC,MADQ;AAEb6C,wBAAoB;AACnBa,eAAS;AADU;AAFP,GAAd;AAOA,SAAO,KAAKP,IAAL,CAAUf,KAAV,EAAiB;AAAEwB,YAAQ;AAAEf,0BAAoB,CAAtB;AAAyBiB,SAAG;AAA5B;AAAV,GAAjB,CAAP;AACA,CATD,C","file":"/packages/rocketchat_push-notifications.js","sourcesContent":["Meteor.methods({\n\tsaveNotificationSettings(roomId, field, value) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'saveNotificationSettings' });\n\t\t}\n\t\tcheck(roomId, String);\n\t\tcheck(field, String);\n\t\tcheck(value, String);\n\n\t\tconst notifications = {\n\t\t\t'audioNotifications': {\n\t\t\t\tupdateMethod: (subscription, value) => RocketChat.models.Subscriptions.updateAudioNotificationsById(subscription._id, value)\n\t\t\t},\n\t\t\t'desktopNotifications': {\n\t\t\t\tupdateMethod: (subscription, value) => RocketChat.models.Subscriptions.updateDesktopNotificationsById(subscription._id, value)\n\t\t\t},\n\t\t\t'mobilePushNotifications': {\n\t\t\t\tupdateMethod: (subscription, value) => RocketChat.models.Subscriptions.updateMobilePushNotificationsById(subscription._id, value)\n\t\t\t},\n\t\t\t'emailNotifications': {\n\t\t\t\tupdateMethod: (subscription, value) => RocketChat.models.Subscriptions.updateEmailNotificationsById(subscription._id, value)\n\t\t\t},\n\t\t\t'unreadAlert': {\n\t\t\t\tupdateMethod: (subscription, value) => RocketChat.models.Subscriptions.updateUnreadAlertById(subscription._id, value)\n\t\t\t},\n\t\t\t'disableNotifications': {\n\t\t\t\tupdateMethod: (subscription, value) => RocketChat.models.Subscriptions.updateDisableNotificationsById(subscription._id, value === '1')\n\t\t\t},\n\t\t\t'hideUnreadStatus': {\n\t\t\t\tupdateMethod: (subscription, value) => RocketChat.models.Subscriptions.updateHideUnreadStatusById(subscription._id, value === '1')\n\t\t\t},\n\t\t\t'muteGroupMentions': {\n\t\t\t\tupdateMethod: (subscription, value) => RocketChat.models.Subscriptions.updateMuteGroupMentions(subscription._id, value === '1')\n\t\t\t},\n\t\t\t'desktopNotificationDuration': {\n\t\t\t\tupdateMethod: (subscription, value) => RocketChat.models.Subscriptions.updateDesktopNotificationDurationById(subscription._id, value)\n\t\t\t},\n\t\t\t'audioNotificationValue': {\n\t\t\t\tupdateMethod: (subscription, value) => RocketChat.models.Subscriptions.updateAudioNotificationValueById(subscription._id, value)\n\t\t\t}\n\t\t};\n\t\tconst isInvalidNotification = !Object.keys(notifications).includes(field);\n\t\tconst basicValuesForNotifications = ['all', 'mentions', 'nothing', 'default'];\n\t\tconst fieldsMustHaveBasicValues = ['emailNotifications', 'audioNotifications', 'mobilePushNotifications', 'desktopNotifications'];\n\n\t\tif (isInvalidNotification) {\n\t\t\tthrow new Meteor.Error('error-invalid-settings', 'Invalid settings field', { method: 'saveNotificationSettings' });\n\t\t}\n\n\t\tif (fieldsMustHaveBasicValues.includes(field) && !basicValuesForNotifications.includes(value)) {\n\t\t\tthrow new Meteor.Error('error-invalid-settings', 'Invalid settings value', { method: 'saveNotificationSettings' });\n\t\t}\n\n\t\tconst subscription = RocketChat.models.Subscriptions.findOneByRoomIdAndUserId(roomId, Meteor.userId());\n\t\tif (!subscription) {\n\t\t\tthrow new Meteor.Error('error-invalid-subscription', 'Invalid subscription', { method: 'saveNotificationSettings' });\n\t\t}\n\n\t\tnotifications[field].updateMethod(subscription, value);\n\n\t\treturn true;\n\t},\n\n\tsaveAudioNotificationValue(rid, value) {\n\t\tconst subscription = RocketChat.models.Subscriptions.findOneByRoomIdAndUserId(rid, Meteor.userId());\n\t\tif (!subscription) {\n\t\t\tthrow new Meteor.Error('error-invalid-subscription', 'Invalid subscription', { method: 'saveAudioNotificationValue' });\n\t\t}\n\t\tRocketChat.models.Subscriptions.updateAudioNotificationValueById(subscription._id, value);\n\t\treturn true;\n\t},\n\n\tsaveDesktopNotificationDuration(rid, value) {\n\t\tconst subscription = RocketChat.models.Subscriptions.findOneByRoomIdAndUserId(rid, Meteor.userId());\n\t\tif (!subscription) {\n\t\t\tthrow new Meteor.Error('error-invalid-subscription', 'Invalid subscription', { method: 'saveDesktopNotificationDuration' });\n\t\t}\n\t\tRocketChat.models.Subscriptions.updateDesktopNotificationDurationById(subscription._id, value);\n\t\treturn true;\n\t}\n});\n","RocketChat.models.Subscriptions.updateAudioNotificationsById = function(_id, audioNotifications) {\n\tconst query = {\n\t\t_id\n\t};\n\n\tconst update = {};\n\n\tif (audioNotifications === 'default') {\n\t\tupdate.$unset = { audioNotifications: 1 };\n\t} else {\n\t\tupdate.$set = { audioNotifications };\n\t}\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateAudioNotificationValueById = function(_id, audioNotificationValue) {\n\tconst query = {\n\t\t_id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\taudioNotificationValue\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateDesktopNotificationsById = function(_id, desktopNotifications) {\n\tconst query = {\n\t\t_id\n\t};\n\n\tconst update = {};\n\n\tif (desktopNotifications === 'default') {\n\t\tupdate.$unset = { desktopNotifications: 1 };\n\t} else {\n\t\tupdate.$set = { desktopNotifications };\n\t}\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateDesktopNotificationDurationById = function(_id, value) {\n\tconst query = {\n\t\t_id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\tdesktopNotificationDuration: parseInt(value)\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateMobilePushNotificationsById = function(_id, mobilePushNotifications) {\n\tconst query = {\n\t\t_id\n\t};\n\n\tconst update = {};\n\n\tif (mobilePushNotifications === 'default') {\n\t\tupdate.$unset = { mobilePushNotifications: 1 };\n\t} else {\n\t\tupdate.$set = { mobilePushNotifications };\n\t}\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateEmailNotificationsById = function(_id, emailNotifications) {\n\tconst query = {\n\t\t_id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\temailNotifications\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateUnreadAlertById = function(_id, unreadAlert) {\n\tconst query = {\n\t\t_id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\tunreadAlert\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateDisableNotificationsById = function(_id, disableNotifications) {\n\tconst query = {\n\t\t_id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\tdisableNotifications\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateHideUnreadStatusById = function(_id, hideUnreadStatus) {\n\tconst query = {\n\t\t_id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\thideUnreadStatus\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateMuteGroupMentions = function(_id, muteGroupMentions) {\n\tconst query = {\n\t\t_id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\tmuteGroupMentions\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.findAlwaysNotifyAudioUsersByRoomId = function(roomId) {\n\tconst query = {\n\t\trid: roomId,\n\t\taudioNotifications: 'all'\n\t};\n\n\treturn this.find(query);\n};\n\nRocketChat.models.Subscriptions.findAlwaysNotifyDesktopUsersByRoomId = function(roomId) {\n\tconst query = {\n\t\trid: roomId,\n\t\tdesktopNotifications: 'all'\n\t};\n\n\treturn this.find(query);\n};\n\nRocketChat.models.Subscriptions.findDontNotifyDesktopUsersByRoomId = function(roomId) {\n\tconst query = {\n\t\trid: roomId,\n\t\tdesktopNotifications: 'nothing'\n\t};\n\n\treturn this.find(query);\n};\n\nRocketChat.models.Subscriptions.findAlwaysNotifyMobileUsersByRoomId = function(roomId) {\n\tconst query = {\n\t\trid: roomId,\n\t\tmobilePushNotifications: 'all'\n\t};\n\n\treturn this.find(query);\n};\n\nRocketChat.models.Subscriptions.findDontNotifyMobileUsersByRoomId = function(roomId) {\n\tconst query = {\n\t\trid: roomId,\n\t\tmobilePushNotifications: 'nothing'\n\t};\n\n\treturn this.find(query);\n};\n\nRocketChat.models.Subscriptions.findNotificationPreferencesByRoom = function(roomId, explicit) {\n\tconst query = {\n\t\trid: roomId,\n\t\t'u._id': {$exists: true}\n\t};\n\n\tif (explicit) {\n\t\tquery.$or = [\n\t\t\t{audioNotifications: {$exists: true}},\n\t\t\t{audioNotificationValue: {$exists: true}},\n\t\t\t{desktopNotifications: {$exists: true}},\n\t\t\t{desktopNotificationDuration: {$exists: true}},\n\t\t\t{mobilePushNotifications: {$exists: true}},\n\t\t\t{disableNotifications: {$exists: true}},\n\t\t\t{muteGroupMentions: {$exists: true}}\n\t\t];\n\t}\n\n\treturn this.find(query, { fields: { 'u._id': 1, audioNotifications: 1, audioNotificationValue: 1, desktopNotificationDuration: 1, desktopNotifications: 1, mobilePushNotifications: 1, disableNotifications: 1, muteGroupMentions: 1 } });\n};\n\nRocketChat.models.Subscriptions.findWithSendEmailByRoomId = function(roomId) {\n\tconst query = {\n\t\trid: roomId,\n\t\temailNotifications: {\n\t\t\t$exists: true\n\t\t}\n\t};\n\n\treturn this.find(query, { fields: { emailNotifications: 1, u: 1 } });\n};\n"]}